image: python:3.13-slim-bookworm  # Default image

# TODO investigate logging into Docker Hub
#before_script:
#  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_TOKEN"

stages:
  - test
  - deploy

variables:
  PDM_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pdm"
  PIP_NO_CACHE_DIR: "off"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_PROGRESS_BAR: "off"

cache:
  key: "$CI_JOB_NAME"
  paths:
    - .cache/pdm
    - __pypackages__

test:
  stage: test
  before_script:
    - pip install pdm
    - pdm config cache_dir "$PDM_CACHE_DIR"
    - pdm sync --dev
  script:
    - pdm run pytest --cov=datacite_websnap --cov-report=term --no-cov-on-fail
  coverage: '/TOTAL.*\s+(\d+)%/'

test-tox:
  stage: test
  image: python:${PYTHON_VERSION}-slim-bookworm
  before_script:
    - pip install pdm
    - pdm sync --dev
  script:
    - pdm run tox -e py${PYTHON_VERSION}
  parallel:
    matrix:
      - PYTHON_VERSION: [ "3.11", "3.12", "3.13" ]
  when: manual

deploy:
  stage: deploy
  variables:
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: $CI_JOB_TOKEN
  script:
    - pip install build twine pdm

    # Extract original version from pyproject.toml using sed (the first match for version)
    - ORIGINAL_VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' pyproject.toml)

    # Build package with dev dependencies:
    # Modify the version to include '.dev'
    - sed -i "s/^version = \".*\"/version = \"${ORIGINAL_VERSION}.dev\"/" pyproject.toml
    - python -m build --wheel --sdist --no-isolation
    - python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

    # Build package without dev dependencies:
    # Revert the version to the original version (without .dev)
    - sed -i "s/^version = \".*\"/version = \"${ORIGINAL_VERSION}\"/" pyproject.toml
    - pip install pdm
    - pdm install --without dev  # Install without dev dependencies
    - python -m build --wheel --sdist --no-isolation
    - python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  when: manual
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
    - when: manual
